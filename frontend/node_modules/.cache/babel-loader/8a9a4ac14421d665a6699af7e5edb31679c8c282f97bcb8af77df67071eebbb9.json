{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Link}from\"react-router-dom\";import FighterCard from\"../components/FighterCard\";import\"./KoreanFightersPage.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const KoreanFightersPage=()=>{const[fighters,setFighters]=useState([]);const[loading,setLoading]=useState(true);const[error,setError]=useState(null);useEffect(()=>{const fetchFighters=async()=>{try{const response=await fetch(\"/api/korean-fighters\");if(!response.ok){throw new Error(\"Network response was not ok\");}const data=await response.json();setFighters(data);}catch(error){setError(error.message);}finally{setLoading(false);}};fetchFighters();},[]);const toKebabCase=str=>{return str.toLowerCase().replace(/ /g,\"-\");};return/*#__PURE__*/_jsxs(\"div\",{className:\"korean-fighters-page\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"korean-fighters-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Korean UFC Fighters\"}),/*#__PURE__*/_jsx(\"p\",{children:\"A showcase of talented fighters from South Korea.\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"korean-fighters-container\",children:[loading&&/*#__PURE__*/_jsx(\"p\",{className:\"loading-message\",children:\"Loading fighters...\"}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"error-message\",children:[\"Error fetching fighters: \",error]}),!loading&&!error&&/*#__PURE__*/_jsx(\"div\",{className:\"fighters-grid\",children:fighters.map((fighter,index)=>/*#__PURE__*/_jsx(Link,{to:\"/fighter/\".concat(toKebabCase(fighter.name)),children:/*#__PURE__*/_jsx(FighterCard,{fighter:fighter})},fighter.id||index))})]})]});};export default KoreanFightersPage;","map":{"version":3,"names":["React","useState","useEffect","Link","FighterCard","jsx","_jsx","jsxs","_jsxs","KoreanFightersPage","fighters","setFighters","loading","setLoading","error","setError","fetchFighters","response","fetch","ok","Error","data","json","message","toKebabCase","str","toLowerCase","replace","className","children","map","fighter","index","to","concat","name","id"],"sources":["C:/Users/Lee/OneDrive/바탕 화면/대학/3-2/나노랩 심화2 (백우진)/ufc insight/frontend/src/pages/KoreanFightersPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport FighterCard from \"../components/FighterCard\";\nimport \"./KoreanFightersPage.css\";\n\nconst KoreanFightersPage = () => {\n  const [fighters, setFighters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFighters = async () => {\n      try {\n        const response = await fetch(\"/api/korean-fighters\");\n        if (!response.ok) {\n          throw new Error(\"Network response was not ok\");\n        }\n        const data = await response.json();\n        setFighters(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFighters();\n  }, []);\n\n  const toKebabCase = (str) => {\n    return str.toLowerCase().replace(/ /g, \"-\");\n  };\n\n  return (\n    <div className=\"korean-fighters-page\">\n      <header className=\"korean-fighters-header\">\n        <h1>Korean UFC Fighters</h1>\n        <p>A showcase of talented fighters from South Korea.</p>\n      </header>\n      <main className=\"korean-fighters-container\">\n        {loading && <p className=\"loading-message\">Loading fighters...</p>}\n        {error && (\n          <p className=\"error-message\">Error fetching fighters: {error}</p>\n        )}\n        {!loading && !error && (\n          <div className=\"fighters-grid\">\n            {fighters.map((fighter, index) => (\n              <Link\n                key={fighter.id || index}\n                to={`/fighter/${toKebabCase(fighter.name)}`}\n              >\n                <FighterCard fighter={fighter} />\n              </Link>\n            ))}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default KoreanFightersPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,CAAAC,WAAW,KAAM,2BAA2B,CACnD,MAAO,0BAA0B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElC,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC/B,KAAM,CAACC,QAAQ,CAAEC,WAAW,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACW,OAAO,CAAEC,UAAU,CAAC,CAAGZ,QAAQ,CAAC,IAAI,CAAC,CAC5C,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CAExCC,SAAS,CAAC,IAAM,CACd,KAAM,CAAAc,aAAa,CAAG,KAAAA,CAAA,GAAY,CAChC,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAC,KAAK,CAAC,sBAAsB,CAAC,CACpD,GAAI,CAACD,QAAQ,CAACE,EAAE,CAAE,CAChB,KAAM,IAAI,CAAAC,KAAK,CAAC,6BAA6B,CAAC,CAChD,CACA,KAAM,CAAAC,IAAI,CAAG,KAAM,CAAAJ,QAAQ,CAACK,IAAI,CAAC,CAAC,CAClCX,WAAW,CAACU,IAAI,CAAC,CACnB,CAAE,MAAOP,KAAK,CAAE,CACdC,QAAQ,CAACD,KAAK,CAACS,OAAO,CAAC,CACzB,CAAC,OAAS,CACRV,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,CAEDG,aAAa,CAAC,CAAC,CACjB,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAQ,WAAW,CAAIC,GAAG,EAAK,CAC3B,MAAO,CAAAA,GAAG,CAACC,WAAW,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,CAAE,GAAG,CAAC,CAC7C,CAAC,CAED,mBACEnB,KAAA,QAAKoB,SAAS,CAAC,sBAAsB,CAAAC,QAAA,eACnCrB,KAAA,WAAQoB,SAAS,CAAC,wBAAwB,CAAAC,QAAA,eACxCvB,IAAA,OAAAuB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BvB,IAAA,MAAAuB,QAAA,CAAG,mDAAiD,CAAG,CAAC,EAClD,CAAC,cACTrB,KAAA,SAAMoB,SAAS,CAAC,2BAA2B,CAAAC,QAAA,EACxCjB,OAAO,eAAIN,IAAA,MAAGsB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAC,qBAAmB,CAAG,CAAC,CACjEf,KAAK,eACJN,KAAA,MAAGoB,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,2BAAyB,CAACf,KAAK,EAAI,CACjE,CACA,CAACF,OAAO,EAAI,CAACE,KAAK,eACjBR,IAAA,QAAKsB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BnB,QAAQ,CAACoB,GAAG,CAAC,CAACC,OAAO,CAAEC,KAAK,gBAC3B1B,IAAA,CAACH,IAAI,EAEH8B,EAAE,aAAAC,MAAA,CAAcV,WAAW,CAACO,OAAO,CAACI,IAAI,CAAC,CAAG,CAAAN,QAAA,cAE5CvB,IAAA,CAACF,WAAW,EAAC2B,OAAO,CAAEA,OAAQ,CAAE,CAAC,EAH5BA,OAAO,CAACK,EAAE,EAAIJ,KAIf,CACP,CAAC,CACC,CACN,EACG,CAAC,EACJ,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}