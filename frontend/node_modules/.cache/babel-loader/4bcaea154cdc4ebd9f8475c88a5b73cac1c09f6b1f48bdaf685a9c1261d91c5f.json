{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lee\\\\OneDrive\\\\\\uBC14\\uD0D5 \\uD654\\uBA74\\\\\\uB300\\uD559\\\\3-2\\\\\\uB098\\uB178\\uB7A9 \\uC2EC\\uD6542 (\\uBC31\\uC6B0\\uC9C4)\\\\ufc insight\\\\frontend\\\\src\\\\pages\\\\KoreanFightersPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport FighterCard from '../components/FighterCard';\nimport './KoreanFightersPage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KoreanFightersPage = () => {\n  _s();\n  const [fighters, setFighters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchFighters = async () => {\n      try {\n        console.log(\"Fetching fighters...\");\n        setLoading(true);\n        const response = await fetch('/api/korean-fighters');\n        console.log(\"Response from server:\", response);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched fighters data:', data);\n        setFighters(JSON.parse(data)); // Parse the JSON string\n      } catch (error) {\n        console.error(\"Error fetching fighters:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchFighters();\n  }, []);\n  const toKebabCase = str => {\n    return str.toLowerCase().replace(/ /g, '-');\n  };\n  console.log('Rendering KoreanFightersPage with fighters:', fighters);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"korean-fighters-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"korean-fighters-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Korean UFC Fighters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"korean-fighters-container\",\n      children: [loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"loading-message\",\n        children: \"Loading fighters...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: [\"Error fetching fighters: \", error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 19\n      }, this), !loading && !error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fighters-grid\",\n        children: fighters.map((fighter, index) => /*#__PURE__*/_jsxDEV(Link, {\n          to: `/fighter/${toKebabCase(fighter.name)}`,\n          children: /*#__PURE__*/_jsxDEV(FighterCard, {\n            fighter: fighter\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(KoreanFightersPage, \"5JGpg7OweoHgoMfxNpet5s/vCwI=\");\n_c = KoreanFightersPage;\nexport default KoreanFightersPage;\nvar _c;\n$RefreshReg$(_c, \"KoreanFightersPage\");","map":{"version":3,"names":["React","useState","useEffect","Link","FighterCard","jsxDEV","_jsxDEV","KoreanFightersPage","_s","fighters","setFighters","loading","setLoading","error","setError","fetchFighters","console","log","response","fetch","ok","Error","data","json","JSON","parse","message","toKebabCase","str","toLowerCase","replace","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","fighter","index","to","name","_c","$RefreshReg$"],"sources":["C:/Users/Lee/OneDrive/바탕 화면/대학/3-2/나노랩 심화2 (백우진)/ufc insight/frontend/src/pages/KoreanFightersPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport FighterCard from '../components/FighterCard';\nimport './KoreanFightersPage.css';\n\nconst KoreanFightersPage = () => {\n  const [fighters, setFighters] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchFighters = async () => {\n      try {\n        console.log(\"Fetching fighters...\");\n        setLoading(true);\n        const response = await fetch('/api/korean-fighters');\n        console.log(\"Response from server:\", response);\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Fetched fighters data:', data);\n        setFighters(JSON.parse(data)); // Parse the JSON string\n      } catch (error) {\n        console.error(\"Error fetching fighters:\", error);\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchFighters();\n  }, []);\n\n  const toKebabCase = (str) => {\n    return str.toLowerCase().replace(/ /g, '-');\n  };\n\n  console.log('Rendering KoreanFightersPage with fighters:', fighters);\n\n  return (\n    <div className=\"korean-fighters-page\">\n      <header className=\"korean-fighters-header\">\n        <h1>Korean UFC Fighters</h1>\n      </header>\n      <main className=\"korean-fighters-container\">\n        {loading && <p className=\"loading-message\">Loading fighters...</p>}\n        {error && <p className=\"error-message\">Error fetching fighters: {error}</p>}\n        {!loading && !error && (\n          <div className=\"fighters-grid\">\n            {fighters.map((fighter, index) => (\n              <Link key={index} to={`/fighter/${toKebabCase(fighter.name)}`}>\n                <FighterCard fighter={fighter} />\n              </Link>\n            ))}\n          </div>\n        )}\n      </main>\n    </div>\n  );\n};\n\nexport default KoreanFightersPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}